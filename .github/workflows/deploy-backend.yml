name: Backend CD

on:
  push:
    branches: 
      - main

env:
  SERVICE_NAME: my-app

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3 

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      - name: Run tests
        working-directory: backend
        run: PYTHONPATH=. pytest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with: 
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker auth
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA ./backend

      - name: Push Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA \
            --region europe-west1 \
            --platform managed \
            --allow-unauthenticated

      - name: Get Cloud Run URL
        id: get-url
        run: |
          echo "url=$(gcloud run services describe my-app --region europe-west1 --format 'value(status.url)')" >> $GITHUB_OUTPUT

      - name: Install Vercel CLI
        run: npm install -g vercel@46.1.0

      - name: Set Vercel Env Var and Trigger Deployment
        run: |
          set -e # Stop at any error

          echo "Removing existing VITE_API_URL (if exists)..."
          vercel env rm VITE_API_URL production --yes --token $VERCEL_TOKEN || true

          echo "Adding new variable VITE_API_URL..."
          echo "${{ steps.get-url.outputs.url }}" | vercel env add VITE_API_URL production --token $VERCEL_TOKEN --debug

          # Trigger frontend production-build..."
          vercel --prod --token $VERCEL_TOKEN --confirm --debug
        
        env: 
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}